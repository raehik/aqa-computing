#!/usr/bin/env bash
#
# Generate a report for editing and submitting on Edmodo.
#

# GitHub user whom the repo belongs to
github_user="raehik"

# sed bit removes trailing whitespace (gcc -v has a space on the end)
version_info="$(gcc -v 2>&1 | tail -n1 | sed 's/ *$//')"

# report/write-up file to throw into the assignment report also (but a report
# might include other things, plus needs a link to the folder on GitHub etc.,
# so I don't just submit $report_file
report_file="report.md"

# file to write to
assignment_file="assignment-report.md"

usage() {
    cat <<EOF
Usage: ${0##*/}
Generates a template report for the current homework.

  Options:
    -c              commit hash to use (otherwise, last commit)
    -h              display this help message
EOF
}

while getopts "c:h" opt; do
    case $opt in
        c) # choose commit
            commit_hash="$OPTARG"
            ;;
        h) # display usage message
            usage
            exit 0
            ;;
    esac
done

shift $(($OPTIND-1))

if [ ! "$commit_hash" ]; then
    echo "no commit provided -- using HEAD"
    commit_hash="HEAD"
fi

# get a ton of info
folder_name="$(basename "$(pwd)")"
git_root="$(basename "$(git rev-parse --show-toplevel)")"
git_branch="$(git rev-parse --abbrev-ref $commit_hash)"
last_hash_short="$(git rev-parse --short $commit_hash)"
last_hash_full="$(git rev-parse $commit_hash)"
last_message="$(git log $commit_hash -1 --pretty=%s)"

# should check that all work, but this'll do for now (dunno what errors you get
# if you provide an incorrect hash)
if [ $? -ne 0 ]; then
    echo "${0##*/}: error: a Git command failed. Do you have Git installed, are you in a repository, and does the commit hash you provided exist?"
    exit 1
fi

# put $report_file's contents into a variable! :O
report_text="$(< $report_file)"

# finally, generate the base report and put it in $assignment_file
echo "***folder:*** https://github.com/$github_user/$git_root/tree/$git_branch/homework/$folder_name
***commit:*** https://github.com/$github_user/$git_root/commit/$last_hash_full *(\"$last_message\")*


$report_text


[compiled with $version_info]" > "$assignment_file"
vim "$assignment_file"
